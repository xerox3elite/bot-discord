import discord
from discord import app_commands
from discord.ext import commands
import datetime

class MigrationHelp(commands.Cog):
    """Syst√®me d'aide d√©di√© √† la migration Arsenal"""
    
    def __init__(self, bot):
        self.bot = bot
    
    @app_commands.command(name="migration_help", description="üöÄ Guide complet du syst√®me de migration Arsenal")
    async def migration_help(self, interaction: discord.Interaction):
        """Affiche l'aide compl√®te pour la migration"""
        
        # Embed principal
        embed = discord.Embed(
            title="üöÄ Arsenal Bot Migration System",
            description="**Syst√®me r√©volutionnaire de migration de configurations**",
            color=discord.Color.blue(),
            timestamp=datetime.datetime.now(datetime.timezone.utc)
        )
        
        embed.add_field(
            name="üéØ Concept",
            value=(
                "Importez automatiquement les configurations d'autres bots Discord populaires "
                "vers Arsenal Bot avec des am√©liorations r√©volutionnaires !"
            ),
            inline=False
        )
        
        embed.add_field(
            name="ü§ñ Bots Support√©s",
            value=(
                "‚Ä¢ **DraftBot** - 12 modules (bienvenue, automod, niveaux, √©conomie...)\n"
                "‚Ä¢ **Dyno** - 5 modules (automod, mod√©ration, formulaires...)\n"
                "‚Ä¢ **Carl-bot** - 3 modules (automod, r√¥les-r√©actions, tags...)\n"
                "‚Ä¢ **MEE6** - 3 modules (niveaux, mod√©ration, bienvenue...)"
            ),
            inline=False
        )
        
        embed.add_field(
            name="‚ö° Commandes Essentielles",
            value=(
                "`/migrate_bot bot:draftbot scan_only:True` - **Scanner uniquement**\n"
                "`/migrate_bot bot:draftbot scan_only:False` - **Migration compl√®te**\n"
                "`/migration_help` - **Afficher cette aide**\n"
                "`/config_modal` - **Configuration Arsenal post-migration**"
            ),
            inline=False
        )
        
        embed.set_footer(text="Arsenal V4.5.1 - Migration System", icon_url=self.bot.user.avatar.url if self.bot.user.avatar else None)
        
        # Boutons d'action
        view = MigrationHelpView()
        
        await interaction.response.send_message(embed=embed, view=view, ephemeral=True)

class MigrationHelpView(discord.ui.View):
    """Interface d'aide pour la migration"""
    
    def __init__(self):
        super().__init__(timeout=300)
    
    @discord.ui.button(label="üìö Guide D√©taill√©", style=discord.ButtonStyle.primary, emoji="üìñ")
    async def detailed_guide(self, interaction: discord.Interaction, button: discord.ui.Button):
        """Guide d√©taill√© de migration"""
        embed = discord.Embed(
            title="üìö Guide D√©taill√© de Migration",
            color=discord.Color.green()
        )
        
        embed.add_field(
            name="üìã √âtapes de Migration",
            value=(
                "**1.** Scanner le bot source avec `scan_only:True`\n"
                "**2.** Analyser les r√©sultats et modules d√©tect√©s\n"
                "**3.** Lancer la migration avec `scan_only:False`\n"
                "**4.** S√©lectionner les modules √† migrer via boutons\n"
                "**5.** Confirmer et attendre la fin du processus\n"
                "**6.** Tester les nouvelles fonctionnalit√©s Arsenal\n"
                "**7.** D√©sactiver l'ancien bot pour √©viter les conflits"
            ),
            inline=False
        )
        
        embed.add_field(
            name="‚ö†Ô∏è Pr√©cautions Importantes",
            value=(
                "‚Ä¢ **Sauvegarde automatique** cr√©√©e avant migration\n"
                "‚Ä¢ **Permissions administrateur** requises\n"
                "‚Ä¢ **Arsenal doit avoir** les m√™mes permissions que l'ancien bot\n"
                "‚Ä¢ **Test recommand√©** sur serveur de d√©veloppement d'abord\n"
                "‚Ä¢ **Une seule migration** par serveur √† la fois"
            ),
            inline=False
        )
        
        await interaction.response.edit_message(embed=embed, view=self)
    
    @discord.ui.button(label="üîß Exemples Pratiques", style=discord.ButtonStyle.secondary, emoji="‚öôÔ∏è")
    async def practical_examples(self, interaction: discord.Interaction, button: discord.ui.Button):
        """Exemples pratiques de migration"""
        embed = discord.Embed(
            title="üîß Exemples Pratiques de Migration",
            color=discord.Color.orange()
        )
        
        embed.add_field(
            name="üéØ Sc√©nario 1: Migration DraftBot compl√®te",
            value=(
                "```\n"
                "/migrate_bot bot:draftbot scan_only:False\n"
                "```\n"
                "**R√©sultat:** Tous les modules DraftBot analys√©s et propos√©s\n"
                "**Modules populaires:** Bienvenue, AutoMod, Niveaux, √âconomie\n"
                "**Temps estim√©:** 45-60 minutes pour migration compl√®te"
            ),
            inline=False
        )
        
        embed.add_field(
            name="üéØ Sc√©nario 2: Migration Dyno cibl√©e",
            value=(
                "```\n"
                "/migrate_bot bot:dyno scan_only:False\n"
                "```\n"
                "**R√©sultat:** Focus sur AutoMod et Mod√©ration\n"
                "**Modules sp√©cialis√©s:** Formulaires, Gestion r√¥les\n"
                "**Temps estim√©:** 20-30 minutes pour modules essentiels"
            ),
            inline=False
        )
        
        embed.add_field(
            name="‚ú® Bonus Arsenal apr√®s Migration",
            value=(
                "ü§ñ **IA de mod√©ration** - D√©tection contextuelle avanc√©e\n"
                "üé® **Interface moderne** - Boutons et modals Discord\n"
                "üìä **Analytics temps r√©el** - Statistiques d√©taill√©es\n"
                "‚ö° **Performance optimis√©e** - Con√ßu pour gros serveurs\n"
                "üíé **ArsenalCoins** - √âconomie r√©volutionnaire"
            ),
            inline=False
        )
        
        await interaction.response.edit_message(embed=embed, view=self)
    
    @discord.ui.button(label="üö® R√©solution Probl√®mes", style=discord.ButtonStyle.danger, emoji="üõ†Ô∏è")
    async def troubleshooting(self, interaction: discord.Interaction, button: discord.ui.Button):
        """Guide de r√©solution de probl√®mes"""
        embed = discord.Embed(
            title="üö® R√©solution de Probl√®mes Migration",
            color=discord.Color.red()
        )
        
        embed.add_field(
            name="‚ùå Erreurs Communes",
            value=(
                "**Bot non support√©**\n"
                "‚Üí V√©rifiez l'orthographe: `draftbot`, `dyno`, `carlbot`, `mee6`\n\n"
                "**Bot non pr√©sent**\n"
                "‚Üí Le bot source doit √™tre sur le serveur\n\n"
                "**Permissions insuffisantes**\n"
                "‚Üí Vous devez √™tre administrateur du serveur\n\n"
                "**Migration √©choue**\n"
                "‚Üí Arsenal doit avoir les m√™mes permissions que l'ancien bot"
            ),
            inline=False
        )
        
        embed.add_field(
            name="üîß Solutions Rapides",
            value=(
                "**1.** V√©rifier les permissions d'Arsenal\n"
                "**2.** Relancer avec moins de modules s√©lectionn√©s\n"
                "**3.** Scanner d'abord (`scan_only:True`)\n"
                "**4.** V√©rifier que l'ancien bot est actif\n"
                "**5.** Attendre quelques minutes entre tentatives"
            ),
            inline=False
        )
        
        embed.add_field(
            name="üìû Support Avanc√©",
            value=(
                "‚Ä¢ Logs d√©taill√©s sauvegard√©s automatiquement\n"
                "‚Ä¢ Sauvegarde de s√©curit√© toujours cr√©√©e\n"
                "‚Ä¢ Possibilit√© de restauration manuelle\n"
                "‚Ä¢ Support communautaire disponible"
            ),
            inline=False
        )
        
        await interaction.response.edit_message(embed=embed, view=self)
    
    @discord.ui.button(label="üéâ D√©mo Interactive", style=discord.ButtonStyle.success, emoji="üöÄ")
    async def interactive_demo(self, interaction: discord.Interaction, button: discord.ui.Button):
        """D√©mo interactive du syst√®me"""
        embed = discord.Embed(
            title="üéâ D√©mo Arsenal Migration System",
            description="**Simulation d'une migration DraftBot ‚Üí Arsenal**",
            color=discord.Color.green()
        )
        
        embed.add_field(
            name="üì• Configuration DraftBot D√©tect√©e",
            value=(
                "‚Ä¢ **Bienvenue**: `#bienvenue` - Message basique\n"
                "‚Ä¢ **AutoMod**: Anti-spam + Anti-pub activ√©s\n"
                "‚Ä¢ **Niveaux**: Syst√®me XP avec 150 utilisateurs\n"
                "‚Ä¢ **√âconomie**: DraftCoins avec 50 utilisateurs actifs\n"
                "‚Ä¢ **Logs**: `#mod-logs` configur√©\n"
                "‚Ä¢ **Suggestions**: `#suggestions` avec votes"
            ),
            inline=False
        )
        
        embed.add_field(
            name="‚ö° Transformation Arsenal Pr√©vue",
            value=(
                "‚Ä¢ **Bienvenue Elite**: Variables {member_count}, embeds styl√©s\n"
                "‚Ä¢ **AutoMod IA**: D√©tection contextuelle + protection raids\n"
                "‚Ä¢ **Niveaux+**: Conserve XP + nouveaux paliers/r√©compenses\n"
                "‚Ä¢ **ArsenalCoins**: Migration DraftCoins + shop/daily/work\n"
                "‚Ä¢ **Logs Pro**: Plus d'√©v√©nements + analytics temps r√©el\n"
                "‚Ä¢ **Suggestions 2.0**: Threading + mod√©ration int√©gr√©e"
            ),
            inline=False
        )
        
        embed.add_field(
            name="üéØ R√©sultat Final",
            value=(
                "‚úÖ **100%** des fonctionnalit√©s DraftBot pr√©serv√©es\n"
                "üöÄ **+75** nouvelles fonctionnalit√©s exclusives Arsenal\n"
                "‚≠ê **Interface r√©volutionnaire** avec boutons Discord\n"
                "üìä **Analytics avanc√©es** et statistiques temps r√©el\n"
                "üõ°Ô∏è **S√©curit√© renforc√©e** avec IA de mod√©ration"
            ),
            inline=False
        )
        
        embed.set_footer(text="üé¨ Cette d√©mo repr√©sente les r√©sultats typiques d'une migration DraftBot")
        
        await interaction.response.edit_message(embed=embed, view=self)
    
    @discord.ui.button(label="üè† Retour", style=discord.ButtonStyle.gray, emoji="‚Ü©Ô∏è", row=1)
    async def back_to_main(self, interaction: discord.Interaction, button: discord.ui.Button):
        """Retour au menu principal"""
        embed = discord.Embed(
            title="üöÄ Arsenal Bot Migration System",
            description="**Syst√®me r√©volutionnaire de migration de configurations**",
            color=discord.Color.blue()
        )
        
        embed.add_field(
            name="üéØ Concept",
            value=(
                "Importez automatiquement les configurations d'autres bots Discord populaires "
                "vers Arsenal Bot avec des am√©liorations r√©volutionnaires !"
            ),
            inline=False
        )
        
        embed.add_field(
            name="ü§ñ Bots Support√©s",
            value=(
                "‚Ä¢ **DraftBot** - 12 modules (bienvenue, automod, niveaux, √©conomie...)\n"
                "‚Ä¢ **Dyno** - 5 modules (automod, mod√©ration, formulaires...)\n"
                "‚Ä¢ **Carl-bot** - 3 modules (automod, r√¥les-r√©actions, tags...)\n"
                "‚Ä¢ **MEE6** - 3 modules (niveaux, mod√©ration, bienvenue...)"
            ),
            inline=False
        )
        
        embed.add_field(
            name="‚ö° Commandes Essentielles",
            value=(
                "`/migrate_bot bot:draftbot scan_only:True` - **Scanner uniquement**\n"
                "`/migrate_bot bot:draftbot scan_only:False` - **Migration compl√®te**\n"
                "`/migration_help` - **Afficher cette aide**\n"
                "`/config_modal` - **Configuration Arsenal post-migration**"
            ),
            inline=False
        )
        
        await interaction.response.edit_message(embed=embed, view=self)

async def setup(bot):
    await bot.add_cog(MigrationHelp(bot))
